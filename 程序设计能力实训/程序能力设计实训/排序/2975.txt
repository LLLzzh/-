有 N 个 1 到 1000 之间的整数（1≤N≤100），对于其中重复的数，只保留一个，把其余相同的数去掉。然后再按照个位数字进行升序排序，如果个位数字相同，则小的数排在前面。

Input
第 1 行：整数 $T$ ($1 \le T \le 10$) 为问题数。

第 2 ∽ 2*T+1 行：每一个问题两行，第一行整数个数 N，第二行 N 个用一个空格分隔的正整数。

Output
对于每个问题，输出一行问题的编号（0 开始编号，格式：case #0: 等），然后在一行中输出经去重和排序后的正整数，两个数之间用一个空格分隔。最后一个数后没有空格。行末尾输出一个换行符。

Examples
input
2
10
20 40 32 67 40 20 89 300 400 15
18
2 1 2 1 2 1 2 1 20 20 40 32 67 40 89 300 400 15
output
case #0:
20 40 300 400 32 15 67 89
case #1:
20 40 300 400 1 2 32 15 67 89



#include<stdio.h>
int main ()
{
	int i,j,k,a[101]={0},t,n,m;
	scanf("%d",&t);
	for(k=0;k<t;k++)
	{
		scanf("%d",&n);
		for(i=0;i<n;i++)
		scanf("%d",&a[i]);
		printf("case #%d:\n",k);
		for(i=0;i<n;i++)
			for(j=i+1;j<n;j++)
				if(a[i]%10>a[j]%10||(a[i]%10==a[j]%10&&a[i]>a[j]))
				{
					m=a[i];
					a[i]=a[j];
					a[j]=m;
				}
		printf("%d",a[0]);
		for(i=1;i<n;i++)
			if(a[i]!=a[i-1])
			printf(" %d",a[i]);
		printf("\n");
	}
	return 0;
}