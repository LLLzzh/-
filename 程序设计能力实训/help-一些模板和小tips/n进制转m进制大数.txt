#include <iostream>  
#include <cstring>  
#include <ctype.h>  
using namespace std;  
  
int main(){  
    int M,N;  
    string X;  
    while(cin>>M>>N){  
        cin>>X; 
        int data[1010];  //保存M进制下的各个位数  
        int output[1010];  //保存N进制下的各个位数  
        memset(output,0,sizeof(output));  
        for(int i=0;i<X.length();i++){  
            if(isalpha(X[i]))  
                data[i] = X[i] - 'A' + 10;  
            else  
                data[i] = X[i] - '0';  
        }  
        int sum = 1;  
        int d  = 0;  
        int len = X.length();  
        int k = 0;  
        while(sum){  
            sum = 0;  
            for(int i=0;i<len;i++){  
                d = data[i] / N;  
                sum += d;  
                if(i == len-1){  
                    output[k++] = data[i] % N;  
                }  
                else{  
                    data[i+1] += (data[i] % N) * M;  
                }  
                data[i] = d;  
            }  
        }  
        if(k == 0){  
            output[k] = 0;  
            k--;  
        }  
        if(k == -1){  
            cout<<0<<endl;  
        }  
        else{  
            for(int i=0;i<k;i++){  
                if(output[k-i-1] > 9)  
                    cout<<(char)(output[k-i-1]+ 'a' - 10);  
                else  
                    cout<<output[k-i-1];  
            }  
        }  
        cout<<endl;  
    }  
    return 0;  
} 
//




#include<cstdio>
#include<iostream>
#include<cstring>
#include <algorithm>
const int maxn=10000;
using namespace std;
int t[maxn],A[maxn];
char str[maxn],str1[maxn],str2[maxn],str3[maxn];
void res(char * s)
{
    int i=0;
    int len=strlen(s);
    for(i=0;i<len/2;i++)
    {
        char temp=s[i];
        s[i]=s[strlen(s)-i-1];
        s[strlen(s)-i-1]=temp;
    }
}
void solve(char *str1,char *str2,int n,int m)
{
    int i,len,k;
    len=strlen(str1);
    for(i=len;i>=0;i--)
    {
        t[len-1-i]=str1[i]-(str1[i]<58?48:str1[i]<97?55:61);
    }
    for(k=0;len;)
    {
        for(i=len;i>=1;i--)
        {
            t[i-1]+=t[i]%m*n;
            t[i]/=m;
        }
        A[k++]=t[0]%m;
        t[0]/=m;
        while(len>0&&!t[len-1])
        {
            len--;
         }
    }
    str2[k]=NULL;
    for(i=0;i<k;i++)
    {
        str2[k-1-i]=A[i]+(A[i]<10?48:A[i]<36?55:61);
    }
}
int main()
{
    while(cin>>str1)
    {
        solve(str1,str2,10,2);
        res(str2);
        solve(str2,str3,2,10);
        cout<<str3<<endl;
    }
}

//改进版

#include<cstdio>
#include<iostream>
#include<cstring>
#include<cctype>
#include<algorithm>
const int maxn = 10000;
using namespace std;
int t[maxn], A[maxn],c,pro;
char str[maxn], str1[maxn], str2[maxn], str3[maxn];
void res(char * s)
{
	int i = 0;
	int len = strlen(s);
	for (i=0;i<strlen(s)/2;i++)
	{
		char temp = s[i];
		s[i] = s[strlen(s) - i - 1];
		s[strlen(s) - i - 1] = temp;
	}
}
void solve(char *str1, char *str2, int n, int m)
{
	int i, len=strlen(str1), k;
	for (i = len-1; i >= 0; i--)
		t[len-1-i] = isdigit(str1[i]) ? str1[i] - '0' : isupper(str1[i]) ? str1[i] - 'A' + 10 : str1[i] - 'a' + 32;//倒置
	for (k = 0;len;)
	{
		for (i=len-1; i >= 1; i--)
		{
			t[i - 1] += t[i] % m*n;
			t[i] /= m;
		}
		A[k++] = t[0] % m;
		t[0] /= m;
		while (len>0 && !t[len - 1])
			len--;
	}
	str2[k] ='\0';
	for (i = 0; i<k; i++)
		str2[k - 1 - i] = A[i] + (A[i]<10 ? 48 : A[i]<36 ? 55 : 61);
}
int main()
{
	cin >> pro;
	for (c = 0; c < pro; c++) {
		cin >> str1;
			solve(str1, str2, 10, 2);
		res(str2);
		solve(str2, str3, 2, 10);
		cout << "case #" << c << ":\n";
		cout << str3 << endl;
	}
}